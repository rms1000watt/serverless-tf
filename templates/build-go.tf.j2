// GENERATED FILE: DO NOT EDIT
{%- for i in range(max_functions) %}

resource "null_resource" "go_{{i}}_build" {
  provisioner "local-exec" {
    command     = "cd ${local.lambda_{{i}}_dir}; ${local.lambda_{{i}}_vendor_cmd != "" ? "${local.lambda_{{i}}_vendor_cmd} && " : ""}${local.lambda_{{i}}_test_cmd != "" ? "${local.lambda_{{i}}_test_cmd} && " : ""}GOOS=linux go build -o ${local.lambda_go_{{i}}_bin}"
    interpreter = ["/bin/bash", "-c"]
  }

  triggers {
    b64sha            = "${base64sha256(file(local.lambda_{{i}}_file))}"
    lambda_go_runtime = "${local.lambda_go_{{i}}_runtime}"
    lambda_go_name    = "${local.lambda_go_{{i}}_name}"
    lambda_go_handler = "${local.lambda_go_{{i}}_handler}"
    lambda_go_bin     = "${local.lambda_go_{{i}}_bin}"
    lambda_go_zip     = "${local.lambda_go_{{i}}_zip}"
    rebuild           = "${local.lambda_{{i}}_rebuild ? timestamp() : local.default_rebuild}"
  }

  depends_on = ["null_resource.validator"]
  count      = "${local.lambda_go_{{i}}_count}"
}

data "archive_file" "lambda_go_{{i}}" {
  type        = "zip"
  source_file = "${local.lambda_go_{{i}}_bin}"
  output_path = "${local.lambda_go_{{i}}_zip}"

  depends_on = ["null_resource.go_{{i}}_build"]
  count      = "${local.lambda_go_{{i}}_count}"
}
{%- endfor %}

// GENERATED FILE: DO NOT EDIT
{%- for i in range(max_functions) %}

resource "null_resource" "js_{{i}}_build" {
  provisioner "local-exec" {
    command     = "${local.lambda_{{i}}_vendor_cmd != "" ? "${local.lambda_{{i}}_vendor_cmd} && " : ""}${local.lambda_{{i}}_test_cmd != "" ? "${local.lambda_{{i}}_test_cmd} && " : ""}echo 'js {{i}} build'"
    interpreter = ["/bin/bash", "-c"]
  }

  triggers {
    b64sha                = "${base64sha256(file(local.lambda_{{i}}_file))}"
    lambda_js_runtime     = "${local.lambda_js_{{i}}_runtime}"
    lambda_js_name        = "${local.lambda_js_{{i}}_name}"
    lambda_js_handler     = "${local.lambda_js_{{i}}_handler}"
    lambda_js_source_file = "${local.lambda_js_{{i}}_source_file}"
    lambda_js_zip         = "${local.lambda_js_{{i}}_zip}"
    rebuild               = "${local.lambda_{{i}}_rebuild ? timestamp() : local.default_rebuild}"
  }

  depends_on = ["null_resource.validator"]
  count      = "${local.lambda_js_{{i}}_count}"
}

data "archive_file" "lambda_js_{{i}}" {
  type        = "zip"
  source_file = "${local.lambda_js_{{i}}_source_file}"
  output_path = "${local.lambda_js_{{i}}_zip}"

  depends_on = ["null_resource.js_{{i}}_build"]
  count      = "${local.lambda_js_{{i}}_count}"
}
{%- endfor %}

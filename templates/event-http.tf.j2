// GENERATED FILE: DO NOT EDIT

resource "aws_api_gateway_rest_api" "global" {
  name   = "${local.service_name}"
  policy = "${local.http_policy}"

  count = "${ {%- for i in range(max_functions) %}(local.api_gateway_{{i}} && local.lambda_{{i}}_same_region) || {% endfor %}false ? 1 : 0}"
}

resource "aws_api_gateway_account" "global" {
  cloudwatch_role_arn = "${aws_iam_role.api_gateway_global.arn}"

  count = "${ {%- for i in range(max_functions) %}(local.api_gateway_{{i}} && local.lambda_{{i}}_same_region) || {% endfor %}false ? 1 : 0}"
}
{%- for i in range(max_functions) %}

resource "aws_api_gateway_rest_api" "{{i}}_regional" {
  name   = "${local.service_name}-${local.lambda_{{i}}_region}"
  policy = "${local.http_policy}"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}} && (local.api_gateway_{{i}}_regional_count == 1) ? 1 : 0}"
}

resource "aws_api_gateway_account" "{{i}}_regional" {
  cloudwatch_role_arn = "${aws_iam_role.api_gateway_global.arn}"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}} && (local.api_gateway_{{i}}_regional_count == 1) ? 1 : 0}"
}

resource "aws_api_gateway_resource" "{{i}}_regional" {
  rest_api_id = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  parent_id   = "${aws_api_gateway_rest_api.{{i}}_regional.root_resource_id}"
  path_part   = "${local.api_gateway_{{i}}_path}"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_regional_count == 2 ? 1 : 0}"
}

resource "aws_api_gateway_method" "{{i}}_n_auth_regional" {
  rest_api_id   = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  resource_id   = "${aws_api_gateway_resource.{{i}}_regional.id}"
  http_method   = "${local.api_gateway_{{i}}_method}"
  authorization = "${local.api_gateway_{{i}}_authorization}"

  provider = "aws.{{i}}"
  count    = "${(local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count == 1) && (local.api_gateway_{{i}}_regional_count == 1) ? 1 : 0}"
}

resource "aws_api_gateway_method" "{{i}}_w_auth_regional" {
  rest_api_id   = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  resource_id   = "${aws_api_gateway_resource.{{i}}_regional.id}"
  http_method   = "${local.api_gateway_{{i}}_method}"
  authorization = "${local.api_gateway_{{i}}_authorization}"
  authorizer_id = "${aws_api_gateway_authorizer.{{i}}_regional.id}"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count + local.api_gateway_{{i}}_regional_count == 3 ? 1 : 0}"
}

resource "aws_api_gateway_integration" "{{i}}_n_auth_regional" {
  rest_api_id             = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  resource_id             = "${aws_api_gateway_method.{{i}}_n_auth_regional.resource_id}"
  http_method             = "${aws_api_gateway_method.{{i}}_n_auth_regional.http_method}"
  type                    = "AWS_PROXY"
  integration_http_method = "POST"
  uri                     = "arn:aws:apigateway:${local.lambda_{{i}}_region}:lambda:path/2015-03-31/functions/${local.lambda_{{i}}_arn}/invocations"

  provider = "aws.{{i}}"
  count    = "${(local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count == 1) && (local.api_gateway_{{i}}_regional_count == 1) ? 1 : 0}"
}

resource "aws_api_gateway_integration" "{{i}}_w_auth_regional" {
  rest_api_id             = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  resource_id             = "${aws_api_gateway_method.{{i}}_w_auth_regional.resource_id}"
  http_method             = "${aws_api_gateway_method.{{i}}_w_auth_regional.http_method}"
  type                    = "AWS_PROXY"
  integration_http_method = "POST"
  uri                     = "arn:aws:apigateway:${local.lambda_{{i}}_region}:lambda:path/2015-03-31/functions/${local.lambda_{{i}}_arn}/invocations"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count + local.api_gateway_{{i}}_regional_count == 3 ? 1 : 0}"
}

resource "aws_api_gateway_deployment" "{{i}}_regional" {
  rest_api_id = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  stage_name  = "${local.api_gateway_{{i}}_stage}"

  variables {
    deployed_at = "${timestamp()}"
  }

  depends_on = [
    "aws_api_gateway_integration.{{i}}_n_auth_regional",
    "aws_api_gateway_integration.{{i}}_w_auth_regional",
    {%- for n in range(i+1, max_functions) %}
    "aws_api_gateway_deployment.{{n}}_regional",
    {%- endfor %}
  ]

  lifecycle {
    create_before_destroy = true
  }

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_regional_count == 2 ? 1 : 0}"
}

resource "aws_api_gateway_method_settings" "{{i}}_regional" {
  rest_api_id = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  stage_name  = "${local.api_gateway_{{i}}_stage}"
  method_path = "*/*"

  settings {
    metrics_enabled = "${local.api_gateway_{{i}}_metrics}"
    logging_level   = "${local.api_gateway_{{i}}_logging_level}"
  }

  depends_on = [
    "aws_api_gateway_deployment.{{i}}_regional",
    "aws_api_gateway_account.{{i}}_regional",
  ]

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_regional_count == 2 ? 1 : 0}"
}

resource "aws_api_gateway_authorizer" "{{i}}_regional" {
  name                   = "${local.api_gateway_{{i}}_authorizer}-{{i}}"      // TODO: remove this -{{i}} hack
  rest_api_id            = "${aws_api_gateway_rest_api.{{i}}_regional.id}"
  authorizer_uri         = "${local.api_gateway_{{i}}_authorizer_uri}"
  authorizer_credentials = "${aws_iam_role.api_gateway_{{i}}_authorizer.arn}"
  type                   = "REQUEST"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_authorizer_count + local.api_gateway_{{i}}_regional_count == 2 ? 1 : 0}"
}

resource "aws_api_gateway_resource" "{{i}}_global" {
  rest_api_id = "${aws_api_gateway_rest_api.global.id}"
  parent_id   = "${aws_api_gateway_rest_api.global.root_resource_id}"
  path_part   = "${local.api_gateway_{{i}}_path}"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_global_count == 2 ? 1 : 0}"
}

resource "aws_api_gateway_method" "{{i}}_n_auth_global" {
  rest_api_id   = "${aws_api_gateway_rest_api.global.id}"
  resource_id   = "${aws_api_gateway_resource.{{i}}_global.id}"
  http_method   = "${local.api_gateway_{{i}}_method}"
  authorization = "${local.api_gateway_{{i}}_authorization}"

  provider = "aws.{{i}}"
  count    = "${(local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count == 1) && (local.api_gateway_{{i}}_global_count == 1) ? 1 : 0}"
}

resource "aws_api_gateway_method" "{{i}}_w_auth_global" {
  rest_api_id   = "${aws_api_gateway_rest_api.global.id}"
  resource_id   = "${aws_api_gateway_resource.{{i}}_global.id}"
  http_method   = "${local.api_gateway_{{i}}_method}"
  authorization = "${local.api_gateway_{{i}}_authorization}"
  authorizer_id = "${aws_api_gateway_authorizer.{{i}}_global.id}"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count + local.api_gateway_{{i}}_global_count == 3 ? 1 : 0}"
}

resource "aws_api_gateway_integration" "{{i}}_n_auth_global" {
  rest_api_id             = "${aws_api_gateway_rest_api.global.id}"
  resource_id             = "${aws_api_gateway_method.{{i}}_n_auth_global.resource_id}"
  http_method             = "${aws_api_gateway_method.{{i}}_n_auth_global.http_method}"
  type                    = "AWS_PROXY"
  integration_http_method = "POST"
  uri                     = "arn:aws:apigateway:${local.lambda_{{i}}_region}:lambda:path/2015-03-31/functions/${local.lambda_{{i}}_arn}/invocations"

  provider = "aws.{{i}}"
  count    = "${(local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count == 1) && (local.api_gateway_{{i}}_global_count == 1) ? 1 : 0}"
}

resource "aws_api_gateway_integration" "{{i}}_w_auth_global" {
  rest_api_id             = "${aws_api_gateway_rest_api.global.id}"
  resource_id             = "${aws_api_gateway_method.{{i}}_w_auth_global.resource_id}"
  http_method             = "${aws_api_gateway_method.{{i}}_w_auth_global.http_method}"
  type                    = "AWS_PROXY"
  integration_http_method = "POST"
  uri                     = "arn:aws:apigateway:${local.lambda_{{i}}_region}:lambda:path/2015-03-31/functions/${local.lambda_{{i}}_arn}/invocations"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_authorizer_count + local.api_gateway_{{i}}_global_count == 3 ? 1 : 0}"
}

resource "aws_api_gateway_deployment" "{{i}}_global" {
  rest_api_id = "${aws_api_gateway_rest_api.global.id}"
  stage_name  = "${local.api_gateway_{{i}}_stage}"

  variables {
    deployed_at = "${timestamp()}"
  }

  depends_on = [
    "aws_api_gateway_integration.{{i}}_n_auth_global",
    "aws_api_gateway_integration.{{i}}_w_auth_global",
    {%- for n in range(i+1, max_functions) %}
    "aws_api_gateway_deployment.{{n}}_global",
    {%- endfor %}
  ]

  lifecycle {
    create_before_destroy = true
  }

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_global_count == 2 ? 1 : 0}"
}

resource "aws_api_gateway_method_settings" "{{i}}_global" {
  rest_api_id = "${aws_api_gateway_rest_api.global.id}"
  stage_name  = "${local.api_gateway_{{i}}_stage}"
  method_path = "*/*"

  settings {
    metrics_enabled = "${local.api_gateway_{{i}}_metrics}"
    logging_level   = "${local.api_gateway_{{i}}_logging_level}"
  }

  depends_on = [
    "aws_api_gateway_deployment.{{i}}_global",
    "aws_api_gateway_account.global",
  ]

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_count + local.api_gateway_{{i}}_global_count == 2 ? 1 : 0}"
}

resource "aws_api_gateway_authorizer" "{{i}}_global" {
  name                   = "${local.api_gateway_{{i}}_authorizer}-{{i}}"      // TODO: remove this -{{i}} hack
  rest_api_id            = "${aws_api_gateway_rest_api.global.id}"
  authorizer_uri         = "${local.api_gateway_{{i}}_authorizer_uri}"
  authorizer_credentials = "${aws_iam_role.api_gateway_{{i}}_authorizer.arn}"
  type                   = "REQUEST"

  provider = "aws.{{i}}"
  count    = "${local.api_gateway_{{i}}_authorizer_count + local.api_gateway_{{i}}_global_count == 2 ? 1 : 0}"
}

{%- endfor %}

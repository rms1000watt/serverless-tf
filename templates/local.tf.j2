// GENERATED FILE: DO NOT EDIT

locals {
  // Variable setup
  path_root_list = "${split("/", path.root)}"
  path_root_len  = "${length(local.path_root_list)}"
  parent_dir     = "${element(local.path_root_list, local.path_root_len - 1)}"
  service_name   = "${var.service != "" ? var.service : local.parent_dir}"
  stage          = "${var.stage}"

  default_lambda_name = "${local.service_name}-serverless-tf"
  default_rebuild     = "never"
  default_s3_events   = "s3:ObjectRemoved:* s3:ObjectCreated:* s3:ReducedRedundancyLostObject"

  functions_length = "${length(var.functions)}"
  zero             = ["0"]
  zeros            = [{%- for i in range(max_functions - 1) %}{k=""},{% endfor %}{k=""}]
  functions        = "${concat(var.functions, local.zeros)}"

  account_id = "${data.aws_caller_identity.current.account_id}"
}
{%- for i in range(max_functions) %}

// locals for lambda_{{i}}
locals {
  lambda_{{i}} = "${local.functions[{{i}}]}"

  // Vars
  lambda_{{i}}_file         = "${lookup(local.lambda_{{i}}, "file", "")}"
  lambda_{{i}}_count        = "${local.lambda_{{i}}_file != "" ? 1 : 0}"
  lambda_{{i}}_vendor_cmd   = "${lookup(local.lambda_{{i}}, "vendor_cmd", "")}"
  lambda_{{i}}_test_cmd     = "${lookup(local.lambda_{{i}}, "test_cmd", "")}"
  lambda_{{i}}_timeout      = "${lookup(local.lambda_{{i}}, "timeout", "5")}"
  lambda_{{i}}_name         = "${lookup(local.lambda_{{i}}, "name", "")}"
  lambda_{{i}}_runtime      = "${lookup(local.lambda_{{i}}, "runtime", "")}"
  lambda_{{i}}_handler      = "${lookup(local.lambda_{{i}}, "handler", "")}"
  lambda_{{i}}_rebuild      = "${lookup(local.lambda_{{i}}, "rebuild", local.default_rebuild) != local.default_rebuild}"
  lambda_{{i}}_role_arn     = "${lookup(local.lambda_{{i}}, "role_arn", "")}"
  lambda_{{i}}_dir          = "${dirname(local.lambda_{{i}}_file)}"
  lambda_{{i}}_arn          = "arn:aws:lambda:${local.lambda_{{i}}_region}:${data.aws_caller_identity.current.account_id}:function:${local.lambda_{{i}}_name_computed}"
  lambda_{{i}}_file_replace = "${replace(replace(replace(replace(replace(local.lambda_{{i}}_file, ".go", ""), ".py", ""), ".js", ""), "/", "-"), "..", "-")}"

  lambda_{{i}}_env_keys             = "${lookup(local.lambda_{{i}}, "env_keys", "AUTHOR")}"
  lambda_{{i}}_env_vals             = "${lookup(local.lambda_{{i}}, "env_vals", "rms1000watt")}"
  lambda_{{i}}_env_keys_list        = "${split(" ", local.lambda_{{i}}_env_keys)}"
  lambda_{{i}}_env_vals_list        = "${split(" ", local.lambda_{{i}}_env_vals)}"
  lambda_{{i}}_env_keys_list_length = "${length(local.lambda_{{i}}_env_keys_list)}"
  lambda_{{i}}_env_vals_list_length = "${length(local.lambda_{{i}}_env_vals_list)}"
  lambda_{{i}}_env                  = "${zipmap(local.lambda_{{i}}_env_keys_list, local.lambda_{{i}}_env_vals_list)}"

  lambda_{{i}}_region_in   = "${lookup(local.lambda_{{i}}, "region", "")}"
  lambda_{{i}}_region      = "${local.lambda_{{i}}_region_in != "" ? local.lambda_{{i}}_region_in  : data.aws_region.current.name}"
  lambda_{{i}}_same_region = "${local.lambda_{{i}}_region == data.aws_region.current.name}"

  // Lambda for Golang
  lambda_go_{{i}}         = "${contains(split(".", local.lambda_{{i}}_file), "go")}"
  lambda_go_{{i}}_count   = "${local.lambda_go_{{i}} ? 1 : 0}"
  lambda_go_{{i}}_name    = "${local.lambda_go_{{i}} && local.lambda_{{i}}_name    != "" ? "${local.service_name}-${local.stage}-${local.lambda_{{i}}_name}" : "${local.service_name}-${local.stage}-${local.lambda_{{i}}_file_replace}-{{i}}" }" //"
  lambda_go_{{i}}_runtime = "${local.lambda_go_{{i}} && local.lambda_{{i}}_runtime != "" ? local.lambda_{{i}}_runtime : "go1.x" }"
  lambda_go_{{i}}_handler = "${local.lambda_go_{{i}} && local.lambda_{{i}}_handler != "" ? local.lambda_{{i}}_handler : local.lambda_go_{{i}}_name}"
  lambda_go_{{i}}_bin     = "${path.root}/bin/${local.lambda_go_{{i}}_name}"
  lambda_go_{{i}}_zip     = "${local.lambda_go_{{i}} ? "${path.root}/.terraform/archive_files/${local.lambda_go_{{i}}_name}-lambda.zip" : ""}" //"

  // Lambda for Python
  lambda_py_{{i}}             = "${contains(split(".", local.lambda_{{i}}_file), "py")}"
  lambda_py_{{i}}_count       = "${local.lambda_py_{{i}} ? 1 : 0}"
  lambda_py_{{i}}_name        = "${local.lambda_py_{{i}} && local.lambda_{{i}}_name != "" ? "${local.service_name}-${local.stage}-${local.lambda_{{i}}_name}" : "${local.service_name}-${local.stage}-${local.lambda_{{i}}_file_replace}-{{i}}" }" //"
  lambda_py_{{i}}_runtime     = "${local.lambda_py_{{i}} && local.lambda_{{i}}_runtime != "" ? local.lambda_{{i}}_runtime : "python3.6" }"
  lambda_py_{{i}}_handler     = "${local.lambda_py_{{i}} && local.lambda_{{i}}_handler != "" ? local.lambda_{{i}}_handler : basename(replace(local.lambda_{{i}}_file, ".py", ".handler"))}"
  lambda_py_{{i}}_source_file = "${local.lambda_py_{{i}} ? local.lambda_{{i}}_file : ""}"
  lambda_py_{{i}}_zip         = "${local.lambda_py_{{i}} ? "${path.root}/.terraform/archive_files/${local.lambda_py_{{i}}_name}-lambda.zip" : ""}" //"

  // Lambda for JS
  lambda_js_{{i}}             = "${contains(split(".", local.lambda_{{i}}_file), "js")}"
  lambda_js_{{i}}_count       = "${local.lambda_js_{{i}} ? 1 : 0}"
  lambda_js_{{i}}_name        = "${local.lambda_js_{{i}} && local.lambda_{{i}}_name != "" ? "${local.service_name}-${local.stage}-${local.lambda_{{i}}_name}" : "${local.service_name}-${local.stage}-${local.lambda_{{i}}_file_replace}-{{i}}" }" //"
  lambda_js_{{i}}_runtime     = "${local.lambda_js_{{i}} && local.lambda_{{i}}_runtime != "" ? local.lambda_{{i}}_runtime : "nodejs8.10" }"
  lambda_js_{{i}}_handler     = "${local.lambda_js_{{i}} && local.lambda_{{i}}_handler != "" ? local.lambda_{{i}}_handler : basename(replace(local.lambda_{{i}}_file, ".js", ".handler"))}"
  lambda_js_{{i}}_source_file = "${local.lambda_js_{{i}} ? local.lambda_{{i}}_file : ""}"
  lambda_js_{{i}}_zip         = "${local.lambda_js_{{i}} ? "${path.root}/.terraform/archive_files/${local.lambda_js_{{i}}_name}-lambda.zip" : ""}" //"

  // Lambda Generic
  lambda_{{i}}_name_computed = "${local.lambda_go_{{i}} ? local.lambda_go_{{i}}_name : (local.lambda_py_{{i}} ? local.lambda_py_{{i}}_name : (local.lambda_js_{{i}} ? local.lambda_js_{{i}}_name : local.default_lambda_name))}"

  // API Gateway
  api_gateway_{{i}}                = "${lookup(local.lambda_{{i}}, "http", "" ) != "" || lookup(local.lambda_{{i}}, "http_path", "") != "" || lookup(local.lambda_{{i}}, "http_method", "") != "" || lookup(local.lambda_{{i}}, "http_authorizer", "") != "" || lookup(local.lambda_{{i}}, "http_stage", "") != ""}"
  api_gateway_{{i}}_count          = "${local.api_gateway_{{i}} ? 1 : 0}"
  api_gateway_{{i}}_name           = "${local.lambda_{{i}}_name_computed}"
  api_gateway_{{i}}_path           = "${lookup(local.lambda_{{i}}, "http_path", local.lambda_{{i}}_name_computed)}"
  api_gateway_{{i}}_method         = "${upper(lookup(local.lambda_{{i}}, "http_method", "get"))}"
  api_gateway_{{i}}_stage          = "${local.stage}"
  api_gateway_{{i}}_metrics        = "${lookup(local.lambda_{{i}}, "http_metrics", "") != ""}"
  api_gateway_{{i}}_logging        = "${lookup(local.lambda_{{i}}, "http_logging", "") != ""}"
  api_gateway_{{i}}_logging_level  = "${local.api_gateway_{{i}}_logging ? "INFO" : "OFF"}"
  api_gateway_{{i}}_regional_count = "${local.lambda_{{i}}_same_region ? 0 : 1}"
  api_gateway_{{i}}_global_count   = "${local.lambda_{{i}}_same_region ? 1 : 0}"

  api_gateway_{{i}}_authorizer                  = "${lookup(local.lambda_{{i}}, "http_authorizer", "")}"
  api_gateway_{{i}}_authorizer_count            = "${local.api_gateway_{{i}}_authorizer != "" ? 1 : 0}"
  api_gateway_{{i}}_authorization               = "${local.api_gateway_{{i}}_authorizer != "" ? "CUSTOM" : "NONE"}"
  api_gateway_{{i}}_authorizer_full_name        = "${local.service_name}-${local.stage}-${local.api_gateway_{{i}}_authorizer}"
  api_gateway_{{i}}_authorizer_lambda_arn       = "arn:aws:lambda:${lookup(local.lambda_name_region, local.api_gateway_{{i}}_authorizer)}:${data.aws_caller_identity.current.account_id}:function:${local.api_gateway_{{i}}_authorizer_full_name}"
  api_gateway_{{i}}_authorizer_uri              = "arn:aws:apigateway:${local.lambda_{{i}}_region}:lambda:path/2015-03-31/functions/${local.api_gateway_{{i}}_authorizer_lambda_arn}/invocations"
  api_gateway_{{i}}_authorizer_policy_arn       = "${lookup(local.lambda_{{i}}, "http_authorizer_policy_arn", "")}"
  api_gateway_{{i}}_authorizer_policy_arn_count = "${local.api_gateway_{{i}}_authorizer_policy_arn != "" ? 1 : 0}"

  // Cloudwatch Schedule
  cloudwatch_{{i}}       = "${lookup(local.lambda_{{i}}, "schedule", "" ) != "" || lookup(local.lambda_{{i}}, "schedule_rate", "") != ""}"
  cloudwatch_{{i}}_count = "${local.cloudwatch_{{i}} ? 1 : 0}"
  cloudwatch_{{i}}_name  = "${local.lambda_{{i}}_name_computed}"
  cloudwatch_{{i}}_rate  = "${lookup(local.lambda_{{i}}, "schedule_rate", "rate(1 hour)")}"

  // S3
  s3_{{i}}_bucket      = "${lookup(local.lambda_{{i}}, "s3_bucket", "")}"
  s3_{{i}}_bucket_arn  = "arn:aws:s3:::${local.s3_{{i}}_bucket}"
  s3_{{i}}_count       = "${local.s3_{{i}}_bucket != "" ? 1 : 0}"
  s3_{{i}}_prefix      = "${lookup(local.lambda_{{i}}, "s3_prefix", "")}"
  s3_{{i}}_suffix      = "${lookup(local.lambda_{{i}}, "s3_suffix", "")}"
  s3_{{i}}_events      = "${lookup(local.lambda_{{i}}, "s3_events", local.default_s3_events)}"
  s3_{{i}}_events_list = "${split(" ", local.s3_{{i}}_events)}"
}
{%- endfor %}

locals {
  lambda_name_region {
{%- for i in range(max_functions) %}
    "${local.lambda_{{i}}_name}" = "${local.lambda_{{i}}_region}",
{%- endfor %}
  }
}
